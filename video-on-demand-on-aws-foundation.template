{
  "Description": "(SO0146) Video on Demand on AWS Foundation Solution Implementation. Version v1.3.2",
  "Mappings": {
    "Send": {
      "AnonymizedUsage": {
        "Data": "Yes"
      }
    }
  },
  "Parameters": {
    "emailAddress": {
      "Type": "String",
      "AllowedPattern": "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$",
      "Description": "The admin email address to receive SNS notifications for job status."
    }
  },
  "Resources": {
    "Logs6819BB44": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "Logs bucket does not require logging configuration"
            },
            {
              "id": "W51",
              "reason": "Logs bucket is private and does not require a bucket policy"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Used to store access logs for other buckets",
              "id": "AwsSolutions-S1"
            },
            {
              "reason": "Bucket is private and is not using HTTP",
              "id": "AwsSolutions-S10"
            }
          ]
        }
      }
    },
    "LogsPolicy90DB40C9": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Logs6819BB44"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Logs6819BB44",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Logs6819BB44",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Logs/Policy/Resource"
      }
    },
    "Source71E471F1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "Logs6819BB44"
          },
          "LogFilePrefix": "source-bucket-logs/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W51",
              "reason": "source bucket is private and does not require a bucket policy"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Bucket is private and is not using HTTP",
              "id": "AwsSolutions-S10"
            }
          ]
        }
      }
    },
    "SourcePolicyE5AB5F73": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Source71E471F1"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Source71E471F1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Source71E471F1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Source/Policy/Resource"
      }
    },
    "Destination920A3C57": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "Logs6819BB44"
          },
          "LogFilePrefix": "destination-bucket-logs/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Destination/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Bucket is private and is not using HTTP",
              "id": "AwsSolutions-S10"
            }
          ]
        }
      }
    },
    "DestinationPolicy7982387E": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Destination920A3C57"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Destination920A3C57",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Destination920A3C57",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Destination920A3C57",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Destination/Policy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "F16",
              "reason": "Public website bucket policy requires a wildcard principal"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Bucket is private and is not using HTTP",
              "id": "AwsSolutions-S10"
            }
          ]
        }
      }
    },
    "CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/CloudFront/CloudFrontDistribution/Origin1/S3Origin/Resource"
      }
    },
    "CloudFrontCloudFrontDistribution824F3346": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Comment": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::StackName"
                },
                " Video on Demand Foundation"
              ]
            ]
          },
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "Logs6819BB44",
                "RegionalDomainName"
              ]
            },
            "Prefix": "cloudfront-logs/"
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "Destination920A3C57",
                  "RegionalDomainName"
                ]
              },
              "Id": "VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A"
                      }
                    ]
                  ]
                }
              }
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/CloudFront/CloudFrontDistribution/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Use case does not warrant CloudFront Geo restriction",
              "id": "AwsSolutions-CFR1"
            },
            {
              "reason": "Use case does not warrant CloudFront integration with AWS WAF",
              "id": "AwsSolutions-CFR2"
            },
            {
              "reason": "CloudFront automatically sets the security policy to TLSv1 when the distribution uses the CloudFront domain name",
              "id": "AwsSolutions-CFR4"
            }
          ]
        }
      }
    },
    "MediaConvertRole031A64A9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/MediaConvertRole/Resource"
      }
    },
    "MediaconvertPolicy9E3026EC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Source71E471F1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Destination920A3C57",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MediaconvertPolicy9E3026EC",
        "Roles": [
          {
            "Ref": "MediaConvertRole031A64A9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/MediaconvertPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "/* required to get/put objects to S3",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      }
    },
    "CustomResourceRoleAB1EF463": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/CustomResourceRole/Resource"
      }
    },
    "CustomResourcePolicy79526710": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutBucketNotification"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Source71E471F1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Source71E471F1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "mediaconvert:DescribeEndpoints",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:mediaconvert:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourcePolicy79526710",
        "Roles": [
          {
            "Ref": "CustomResourceRoleAB1EF463"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/CustomResourcePolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Resource ARNs are not generated at the time of policy creation",
              "id": "AwsSolutions-IAM5"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Resource ARNs are not generated at the time of policy creation"
            }
          ]
        }
      }
    },
    "CustomResource8CDCD7A7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "video-on-demand-on-aws-foundation/v1.3.2/asset28176a4d84c646a9e7c3d35173c64a748ed17733a2caa6b28886849b78ad5a3e.zip"
        },
        "Description": "CFN Custom resource to copy assets to S3 and get the MediaConvert endpoint",
        "Environment": {
          "Variables": {
            "SOLUTION_IDENTIFIER": "AwsSolution/SO0146/v1.3.2"
          }
        },
        "Handler": "asset28176a4d84c646a9e7c3d35173c64a748ed17733a2caa6b28886849b78ad5a3e/index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceRoleAB1EF463",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30
      },
      "DependsOn": [
        "CustomResourcePolicy79526710",
        "CustomResourceRoleAB1EF463"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Invalid warning: function has access to cloudwatch"
            },
            {
              "id": "W89",
              "reason": "Invalid warning: lambda not needed in VPC"
            },
            {
              "id": "W92",
              "reason": "Invalid warning: lambda does not need ReservedConcurrentExecutions"
            }
          ]
        }
      }
    },
    "Endpoint": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResource8CDCD7A7",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Endpoint/Default"
      }
    },
    "JobSubmitRole4FA8E972": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobSubmitRole/Resource"
      }
    },
    "JobSubmitRoleDefaultPolicy20E077D9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "NotificationSnsTopicB941FD22"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "JobSubmitRoleDefaultPolicy20E077D9",
        "Roles": [
          {
            "Ref": "JobSubmitRole4FA8E972"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobSubmitRole/DefaultPolicy/Resource"
      }
    },
    "JobSubmitPolicy098DF0F8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MediaConvertRole031A64A9",
                  "Arn"
                ]
              }
            },
            {
              "Action": "mediaconvert:CreateJob",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":mediaconvert:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Source71E471F1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Source71E471F1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "JobSubmitPolicy098DF0F8",
        "Roles": [
          {
            "Ref": "JobSubmitRole4FA8E972"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobSubmitPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Resource ARNs are not generated at the time of policy creation",
              "id": "AwsSolutions-IAM5"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Resource ARNs are not generated at the time of policy creation"
            }
          ]
        }
      }
    },
    "jobSubmitB391E42F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "video-on-demand-on-aws-foundation/v1.3.2/asset3c360c6e044732ec06f0bb16a2a344f8ec0460c7ef0008e6a0a93718a3693488.zip"
        },
        "Description": "Submits an Encoding job to MediaConvert",
        "Environment": {
          "Variables": {
            "MEDIACONVERT_ENDPOINT": {
              "Fn::GetAtt": [
                "Endpoint",
                "Endpoint"
              ]
            },
            "MEDIACONVERT_ROLE": {
              "Fn::GetAtt": [
                "MediaConvertRole031A64A9",
                "Arn"
              ]
            },
            "JOB_SETTINGS": "job-settings.json",
            "DESTINATION_BUCKET": {
              "Ref": "Destination920A3C57"
            },
            "SOLUTION_ID": "SO0146",
            "STACKNAME": {
              "Ref": "AWS::StackName"
            },
            "SOLUTION_IDENTIFIER": "AwsSolution/SO0146/v1.3.2",
            "SNS_TOPIC_ARN": {
              "Ref": "NotificationSnsTopicB941FD22"
            },
            "SNS_TOPIC_NAME": {
              "Fn::GetAtt": [
                "NotificationSnsTopicB941FD22",
                "TopicName"
              ]
            }
          }
        },
        "Handler": "asset3c360c6e044732ec06f0bb16a2a344f8ec0460c7ef0008e6a0a93718a3693488/index.handler",
        "Role": {
          "Fn::GetAtt": [
            "JobSubmitRole4FA8E972",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30
      },
      "DependsOn": [
        "JobSubmitPolicy098DF0F8",
        "JobSubmitRoleDefaultPolicy20E077D9",
        "JobSubmitRole4FA8E972"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Invalid warning: function has access to cloudwatch"
            },
            {
              "id": "W89",
              "reason": "Invalid warning: lambda not needed in VPC"
            },
            {
              "id": "W92",
              "reason": "Invalid warning: lambda does not need ReservedConcurrentExecutions"
            }
          ]
        }
      }
    },
    "jobSubmitEventInvokeConfig0385F502": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "jobSubmitB391E42F"
        },
        "MaximumRetryAttempts": 0,
        "Qualifier": "$LATEST"
      },
      "DependsOn": [
        "JobSubmitPolicy098DF0F8",
        "JobSubmitRoleDefaultPolicy20E077D9",
        "JobSubmitRole4FA8E972"
      ],
      "Metadata": {
        "aws:cdk:path": "VodFoundation/jobSubmit/EventInvokeConfig/Resource"
      }
    },
    "jobSubmitS3Trigger3DEB8D7C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "jobSubmitB391E42F",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "DependsOn": [
        "JobSubmitPolicy098DF0F8",
        "JobSubmitRoleDefaultPolicy20E077D9",
        "JobSubmitRole4FA8E972"
      ],
      "Metadata": {
        "aws:cdk:path": "VodFoundation/jobSubmit/S3Trigger"
      }
    },
    "JobCompleteRole81FD9028": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobCompleteRole/Resource"
      }
    },
    "JobCompleteRoleDefaultPolicyD4DC2F12": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "NotificationSnsTopicB941FD22"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "JobCompleteRoleDefaultPolicyD4DC2F12",
        "Roles": [
          {
            "Ref": "JobCompleteRole81FD9028"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobCompleteRole/DefaultPolicy/Resource"
      }
    },
    "JobCompletePolicyBBFD3892": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "mediaconvert:GetJob",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":mediaconvert:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Source71E471F1",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "JobCompletePolicyBBFD3892",
        "Roles": [
          {
            "Ref": "JobCompleteRole81FD9028"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobCompletePolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Resource ARNs are not generated at the time of policy creation",
              "id": "AwsSolutions-IAM5"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Resource ARNs are not generated at the time of policy creation"
            }
          ]
        }
      }
    },
    "JobComplete703682D0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "video-on-demand-on-aws-foundation/v1.3.2/assete92e8977a302c6f158fdd91189c17c90ce8ab935936e22f3878171f59a50e4d6.zip"
        },
        "Description": "Triggered by EventBridge,processes completed MediaConvert jobs.",
        "Environment": {
          "Variables": {
            "MEDIACONVERT_ENDPOINT": {
              "Fn::GetAtt": [
                "Endpoint",
                "Endpoint"
              ]
            },
            "CLOUDFRONT_DOMAIN": {
              "Fn::GetAtt": [
                "CloudFrontCloudFrontDistribution824F3346",
                "DomainName"
              ]
            },
            "SOURCE_BUCKET": {
              "Ref": "Source71E471F1"
            },
            "JOB_MANIFEST": "jobs-manifest.json",
            "STACKNAME": {
              "Ref": "AWS::StackName"
            },
            "METRICS": {
              "Fn::FindInMap": [
                "Send",
                "AnonymizedUsage",
                "Data"
              ]
            },
            "SOLUTION_ID": "SO0146",
            "VERSION": "v1.3.2",
            "UUID": {
              "Fn::GetAtt": [
                "Endpoint",
                "UUID"
              ]
            },
            "SOLUTION_IDENTIFIER": "AwsSolution/SO0146/v1.3.2",
            "SNS_TOPIC_ARN": {
              "Ref": "NotificationSnsTopicB941FD22"
            },
            "SNS_TOPIC_NAME": {
              "Fn::GetAtt": [
                "NotificationSnsTopicB941FD22",
                "TopicName"
              ]
            }
          }
        },
        "Handler": "assete92e8977a302c6f158fdd91189c17c90ce8ab935936e22f3878171f59a50e4d6/index.handler",
        "Role": {
          "Fn::GetAtt": [
            "JobCompleteRole81FD9028",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30
      },
      "DependsOn": [
        "JobCompletePolicyBBFD3892",
        "JobCompleteRoleDefaultPolicyD4DC2F12",
        "JobCompleteRole81FD9028"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Invalid warning: function has access to cloudwatch"
            },
            {
              "id": "W89",
              "reason": "Invalid warning: lambda not needed in VPC"
            },
            {
              "id": "W92",
              "reason": "Invalid warning: lambda does not need ReservedConcurrentExecutions"
            }
          ]
        }
      }
    },
    "JobCompleteEventInvokeConfig692D89BE": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "JobComplete703682D0"
        },
        "MaximumRetryAttempts": 0,
        "Qualifier": "$LATEST"
      },
      "DependsOn": [
        "JobCompletePolicyBBFD3892",
        "JobCompleteRoleDefaultPolicyD4DC2F12",
        "JobCompleteRole81FD9028"
      ],
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobComplete/EventInvokeConfig/Resource"
      }
    },
    "JobCompleteAwsEventsLambdaInvokePermission1ED79B615": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "JobComplete703682D0",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EventTriggerEventsRule76A88FDF",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "JobCompletePolicyBBFD3892",
        "JobCompleteRoleDefaultPolicyD4DC2F12",
        "JobCompleteRole81FD9028"
      ],
      "Metadata": {
        "aws:cdk:path": "VodFoundation/JobComplete/AwsEventsLambdaInvokePermission-1"
      }
    },
    "S3Config": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResource8CDCD7A7",
            "Arn"
          ]
        },
        "SourceBucket": {
          "Ref": "Source71E471F1"
        },
        "LambdaArn": {
          "Fn::GetAtt": [
            "jobSubmitB391E42F",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "VodFoundation/S3Config/Default"
      }
    },
    "EventTriggerEventsRule76A88FDF": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.mediaconvert"
          ],
          "detail": {
            "userMetadata": {
              "StackName": [
                {
                  "Ref": "AWS::StackName"
                }
              ]
            },
            "status": [
              "COMPLETE",
              "ERROR",
              "CANCELED",
              "INPUT_INFORMATION"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "JobComplete703682D0",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/EventTrigger/EventsRule/Resource"
      }
    },
    "NotificationSnsTopicB941FD22": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":kms:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":alias/aws/sns"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Notification/SnsTopic/Resource"
      }
    },
    "NotificationSnsTopicPolicy4027082A": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:Receive",
                "SNS:AddPermission",
                "SNS:Subscribe"
              ],
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Ref": "NotificationSnsTopicB941FD22"
              },
              "Sid": "TopicOwnerOnlyAccess"
            },
            {
              "Action": [
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:Receive",
                "SNS:AddPermission",
                "SNS:Subscribe"
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Ref": "NotificationSnsTopicB941FD22"
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "NotificationSnsTopicB941FD22"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Notification/SnsTopic/Policy/Resource"
      }
    },
    "NotificationSnsTopicTokenSubscription1209F3ABA": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Ref": "emailAddress"
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationSnsTopicB941FD22"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/Notification/SnsTopic/TokenSubscription:1/Resource"
      }
    },
    "AppRegistryAttributeGroup7AF07446": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
      "Properties": {
        "Attributes": {
          "ApplicationType": "AWS-Solutions",
          "SolutionVersion": "v1.3.2",
          "SolutionID": "SO0146",
          "SolutionName": "Video on Demand on AWS Foundation"
        },
        "Description": "Attribute group for solution information.",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/AppRegistryAttributeGroup/Resource"
      }
    },
    "AppRegistryAttributeGroupApplicationAttributeGroupAssociatione92bb36ecd06C2AD27E6": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryApp5349BE86",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "AppRegistryAttributeGroup7AF07446",
            "Id"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/AppRegistryAttributeGroup/ApplicationAttributeGroupAssociatione92bb36ecd06"
      }
    },
    "AppRegistryApp5349BE86": {
      "Type": "AWS::ServiceCatalogAppRegistry::Application",
      "Properties": {
        "Description": "Service Catalog application to track and manage all your resources. The SolutionId is SO0146 and SolutionVersion is v1.3.2.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "vod-foundation-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              },
              "-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "Tags": {
          "Solutions:ApplicationType": "AWS-Solutions",
          "Solutions:SolutionID": "SO0146",
          "Solutions:SolutionName": "Video on Demand on AWS Foundation",
          "Solutions:SolutionVersion": "v1.3.2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/AppRegistryApp/Resource"
      }
    },
    "AppRegistryAssociation": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryApp5349BE86",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "AWS::StackId"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/AppRegistryAssociation"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSTW/bMAz9LbnLatIUw3ZbmrVFgQ0NktwLWWY8NrZkiFKGQsh/HyU7sdGtF5F8/HqS3q2M35YyzmfqDxW6OhYNljLuvNJHsT6YX6rr0NTJ3SinWvDgBJe+RuKu+6CP4FNy8HqzsQ3q9xEe4j64VwRnoRsbqoOzxsv4A8k7LINHa8SLwxrNSmsgeq7AePR50jo1PKaGzyqmY84CVSvj1jaQUtmOrHrvLBrVlpWS8TEYnZdz7uo/nHj0sznZI6ytOWB+g/+CG3AtEuW1tHxVROBJrpIRkBqImYSBCVuuMgztbYc6Yb2Tz5HjNNyFkrTD7sJxGvMwcCfUoJVXja35vxzU6SneZeTale8fBZ6cDZ34B2GaVqO6jF51Ha+8hlsgG5yGSdX5LC6oyHdkrdRZIoG8ba+5SXfyX4LvQpYKP1yFPfV5oZrut5Lz2fdBfjfJfnqjoTx+uNSENLO7u73MI9tkNfBkPrwL2lNeEEf5FazjUVt7u1v2f1Y6rGooBok8jNDe/szYoJ4i/WWPcLMhJmBsBfKNbk6Lr3LxRS5mb4RYuMBKbUFue/sX0jmgLXgDAAA="
      },
      "Metadata": {
        "aws:cdk:path": "VodFoundation/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "SourceBucket": {
      "Description": "Source S3 Bucket used to host source video and MediaConvert job settings files",
      "Value": {
        "Ref": "Source71E471F1"
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-SourceBucket"
            ]
          ]
        }
      }
    },
    "DestinationBucket": {
      "Description": "Source S3 Bucket used to host all MediaConvert ouputs",
      "Value": {
        "Ref": "Destination920A3C57"
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-DestinationBucket"
            ]
          ]
        }
      }
    },
    "CloudFrontDomain": {
      "Description": "CloudFront Domain Name",
      "Value": {
        "Fn::GetAtt": [
          "CloudFrontCloudFrontDistribution824F3346",
          "DomainName"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-CloudFrontDomain"
            ]
          ]
        }
      }
    },
    "SnsTopic": {
      "Description": "SNS Topic used to capture the VOD workflow outputs including errors",
      "Value": {
        "Fn::GetAtt": [
          "NotificationSnsTopicB941FD22",
          "TopicName"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-SnsTopic"
            ]
          ]
        }
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}